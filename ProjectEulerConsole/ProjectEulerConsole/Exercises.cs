using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ProjectEulerConsole
{
    class Exercises
    {

        /// <summary>
        /// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. 
        /// The sum of these multiples is 23.
        /// Find the sum of all the multiples of 3 or 5 below 1000.
        /// </summary>
        public static double ExerciseOne(int maxNum)
        {
            List<double> numberList = new List<double>();
            for (int i = 1; i < maxNum; i++)
            {
                if(i % 3 == 0 || i % 5 == 0)
                {
                    numberList.Add(i);
                }

            }
            double result = numberList.Sum();
            return result;
        }

        /// <summary>
        /// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
        /// By starting with 1 and 2, the first 10 terms will be:
        /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
        /// By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
        /// find the sum of the even-valued terms.
        /// </summary>
        /// <param name="maxNum"></param>
        /// <returns></returns>
        public static double ExerciseTwo(int maxNum)
        {
            double previousNum = 1;
            double currentNum = 1;
            List<double> fibList = new List<double>();
            while(currentNum < maxNum)
            {
                fibList.Add(currentNum);
                double temp = currentNum;
                currentNum += previousNum;
                previousNum = temp;
            }
            List<double> evenList = new List<double>();
            foreach (double fib in fibList)
            {
                if(fib % 2 == 0)
                {
                    evenList.Add(fib);
                }
            }
            return evenList.Sum();
        }

        /// <summary>
        /// The prime factors of 13195 are 5, 7, 13 and 29.
        /// What is the largest prime factor of the number 600851475143 ?
        /// </summary>
        /// <param name="maxNum"></param>
        /// <returns></returns>
        public static double ExerciseThree(int maxNum)
        {
            List<double> primeList = new List<double>();
            double highestPrime = 0;
            primeList.Add(2);
            for (int i = 3; i < maxNum; i++)
            {
                bool isPrime = true;
                foreach(double prime in primeList)
                {
                    if(i % prime == 0)
                    {
                        isPrime = false;
                        break;
                    }
                }
                if(isPrime)
                {
                    primeList.Add(i);
                }
            }
            foreach(double prime in primeList)
            {
                if(maxNum % prime == 0)
                {
                    highestPrime = prime;
                }
            }
            return highestPrime;
        }
    }
}
